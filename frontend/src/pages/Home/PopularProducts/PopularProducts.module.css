@import "../../../styles/variables.css";

/* ===== Section & Header ===== */
.section {
  max-width: 1200px;
  margin: 0 auto;
  padding: clamp(1.1rem, 2vw, 2rem) 1rem;
  position: relative;   /* peste promo fixed */
  z-index: 1;
  isolation: isolate;
}
.header {
  display: flex;
  align-items: baseline;
  justify-content: space-between;
  gap: 1rem;
  margin-bottom: .75rem;
}
.heading {
  font-family: var(--font-title);
  font-weight: 700;
  font-size: clamp(1.15rem, 2.4vw, 1.8rem);
  margin: 0;
  color: var(--color-text);
}

/* ===== GRID (desktop) & LIST (mobile) ===== */
.grid {
  display: grid;
  gap: clamp(.7rem, 1.4vw, 1rem);
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); /* CARDURI pe desktop */
}

@media (max-width: 760px) {
  .grid { grid-template-columns: 1fr; } /* pe mobil devine listă verticală */
}

/* ===== CARD (tile desktop / row mobil) ===== */
.card {
  display: grid;
  background: var(--surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius);
  padding: .75rem;
  transition: border-color .15s ease, box-shadow .15s ease, transform .12s ease;
  cursor: pointer;
  box-sizing: border-box;

  /* TILE (desktop): imagine sus, text jos */
  grid-template-rows: auto 1fr;
  grid-template-columns: 1fr;
}
.card:hover {
  border-color: color-mix(in oklab, var(--color-primary) 45%, var(--color-border));
  box-shadow: var(--shadow-ambient);
  transform: translateY(-1px);
}

/* ROW (mobil): imagine stânga, text dreapta – compact & fără overflow */
@media (max-width: 760px) {
  .card {
    grid-template-columns: 110px 1fr;   /* coloană stânga mai îngustă */
    grid-template-rows: none;
    gap: 10px;
    padding: .6rem .65rem;
    align-items: start;
  }
}
@media (max-width: 380px) {
  .card { grid-template-columns: 96px 1fr; gap: 8px; }
}

/* imagine */
.thumbLink { display: block; }
.thumb {
  width: 100%;
  height: 100%;
  object-fit: cover;
  aspect-ratio: 4 / 3; /* pe tile desktop */
  border-radius: calc(var(--radius) - 2px);
  border: 1px solid var(--color-border);
  background: var(--surface);
}
@media (max-width: 760px) {
  .thumb { aspect-ratio: 1 / 1; } /* pătrat pe mobil */
}

/* corp card */
.body {
  display: grid;
  gap: .4rem;
  align-content: start;
  margin-top: .5rem; /* distanță sub imagine în tile */
  min-width: 0;     /* previne overflow-ul textului în grid */
}
@media (max-width: 760px) {
  .body { margin-top: 0; padding-left: .1rem; }
}

.name {
  margin: 0;
  font-weight: 700;
  font-size: 1.02rem;
  color: var(--color-text);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@media (max-width: 760px) {
  .name {
    font-size: .98rem;
    white-space: normal;
    display: -webkit-box;
    -webkit-line-clamp: 2;   /* max 2 linii pe mobil */
    -webkit-box-orient: vertical;
    line-clamp: 2;
  }
}

.subRow {
  display: flex;
  align-items: center;
  gap: .5rem;
  min-height: 22px;
  flex-wrap: wrap; /* ca să nu iasă în afară pe ecrane mici */
}
.shop {
  color: var(--color-primary);
  text-decoration: none;
  font-weight: 600;
  font-size: .95rem;
}
.shop:hover { color: var(--color-hover); }
.dot { opacity: .4; }
.time { font-size: .88rem; color: var(--color-text-muted); }

/* --- META ROW: rating + preț --- */
.metaRow {
  display: grid;                     /* grid = control mai bun decât flex */
  grid-template-columns: 1fr auto;   /* rating se întinde, prețul la dreapta */
  align-items: center;
  column-gap: 8px;
  margin-top: .05rem;
}

/* rating: compact, fără overflow */
.rating {
  min-width: 0;
  display: inline-flex;
  align-items: center;
  gap: 4px;
  flex-wrap: nowrap;
}
.rating svg {
  width: 16px;
  height: 16px;
}
.ratingVal {
  font-size: .9rem;
  color: var(--color-text);
  margin-left: 6px;
  font-weight: 600;
}

/* preț: vizibil și pe un rând */
.price {
  margin-left: auto;
  white-space: nowrap;
  font-weight: 800;
  color: var(--color-text);
}

/* ===== Breakpoint-uri mobile pentru meta row ===== */
@media (max-width: 420px) {
  .rating { gap: 3px; }
  .rating svg { width: 14px; height: 14px; }
  .price { font-size: .98rem; }
}
@media (max-width: 360px) {
  .metaRow {
    grid-template-columns: 1fr;  /* stivuim (preț pe rândul 2) */
    row-gap: 4px;
  }
  .price { justify-self: start; } /* sau end, după preferință */
  .ratingVal { display: none; }   /* ascundem numeric pentru spațiu */
}

/* ===== Skeleton (loading) ===== */
.skeleton { pointer-events: none; animation: fadein .2s ease; }
.skelBox {
  border: 1px solid var(--color-border);
  background: linear-gradient(90deg,
    var(--surface) 25%,
    color-mix(in srgb, var(--color-border) 40%, var(--surface)) 37%,
    var(--surface) 63%);
  background-size: 400% 100%;
  animation: shimmer 1.1s infinite linear;
}
.skelLine {
  height: 14px;
  border-radius: 6px;
  background: linear-gradient(90deg,
    var(--surface) 25%,
    color-mix(in srgb, var(--color-border) 40%, var(--surface)) 37%,
    var(--surface) 63%);
  background-size: 400% 100%;
  animation: shimmer 1.1s infinite linear;
  margin-top: .35rem;
}
.skelMeta {
  height: 18px;
  width: 45%;
  border-radius: 6px;
  background: linear-gradient(90deg,
    var(--surface) 25%,
    color-mix(in srgb, var(--color-border) 40%, var(--surface)) 37%,
    var(--surface) 63%);
  background-size: 400% 100%;
  animation: shimmer 1.1s infinite linear;
  margin-top: .4rem;
}
@keyframes shimmer { 0% { background-position: 0% 0; } 100% { background-position: -135% 0; } }
@keyframes fadein { from { opacity: 0; } to { opacity: 1; } }

/* ===== Load more („Vezi mai mult”) ===== */
.loadMoreWrap {
  margin-top: .9rem;
  display: flex;
  justify-content: center;
}
.loadMore {
  border: 1px solid var(--color-primary);
  background: var(--color-primary);
  color: #fff;
  padding: .65rem 1.05rem;
  border-radius: 9999px;
  font-weight: 800;
  cursor: pointer;
  transition: filter .15s ease, transform .08s ease;
}
.loadMore:hover { filter: brightness(1.05); }
.loadMore:active { transform: translateY(1px); }
.loadMore:disabled { opacity: .6; cursor: not-allowed; }

@media (max-width: 760px) {
  .loadMoreWrap {
    padding: 0 max(0px, env(safe-area-inset-right)) 0 max(0px, env(safe-area-inset-left));
  }
  .loadMore {
    width: 100%;
    padding: .8rem 1.1rem;
  }
}
